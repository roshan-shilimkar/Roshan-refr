{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let TimestampcompareComponent = /*#__PURE__*/(() => {\n  class TimestampcompareComponent {\n    constructor() {\n      this.todaysdate = \"\";\n      this.timestampdate = \"\";\n      this.breakS = \"\";\n      this.breakE = \"\"; // ShopS: string = \"09:00\";\n      // ShopE: string = \"\";\n\n      this.OffDays = new FormControl('');\n      this.selectedoffDay = \"\"; // isDaily: boolean = true;\n      // issunday: boolean = true\n      // isholiday: boolean = false;\n\n      this.isbreak = false; // WeekdaysList: Array<any> = [{ Days: \"None\", values: \"\" }, { Days: \"Sunday\", values: \"Sun\" }, { Days: \"Monday\", values: \"Mon\" }, { Days: \"Tuesday\", values: \"Tues\" }, { Days: \"Wednesday\", values: \"Wed\" }, { Days: \"Thursday\", values: \"Thu\" }, { Days: \"Friday\", values: \"Fir\" }, { Days: \"Saturday\", values: \"Sat\" }];\n\n      this.weekstartday = \"\";\n      this.weekendday = \"\";\n      this.storeLoc = {\n        opensDaily: true,\n        opensDailyS: \"07:00\",\n        opensDailyE: \"23:00\",\n        openMon: true,\n        openMonS: \"07:00\",\n        openMonE: \"23:00\",\n        openTue: true,\n        openTueS: \"07:00\",\n        openTueE: \"23:00\",\n        openWed: true,\n        openWedS: \"07:00\",\n        openWedE: \"23:00\",\n        openThu: true,\n        openThuS: \"07:00\",\n        openThuE: \"23:00\",\n        openFri: true,\n        openFriS: \"07:00\",\n        openFriE: \"23:00\",\n        openSat: true,\n        openSatS: \"07:00\",\n        openSatE: \"23:00\",\n        openSun: false,\n        openSunS: \"07:00\",\n        openSunE: \"23:00\"\n      }; // take Current time from firebse in miliseconds and campare it with store time and show \n\n      this.timestamp = {\n        nanoseconds: 0,\n        seconds: 1562524200\n      };\n    }\n\n    ngOnInit() {}\n\n    comparetimestamp() {\n      this.timestampdate = new Date(this.timestamp.seconds * 1000).toDateString();\n    }\n\n    getTOdaysDate() {\n      this.todaysdate = new Date().toDateString();\n    }\n\n    getdiff() {\n      var startDate = new Date(this.timestamp.seconds * 1000);\n      var endDate = new Date();\n      var seconds = (endDate.getTime() - startDate.getTime()) / 1000;\n    }\n\n    printvalue() {// if (this.ShopS == \"\") {\n      //   alert(\"Please Enter the shop opening time.\");\n      // }\n      // else if (this.ShopE == \"\") {\n      //   alert(\"Please Enter the shop Closing time.\");\n      // }\n      // else if (this.ShopE < this.ShopS) {\n      //   this.ShopE = \"\";\n      //   this.ShopS = \"\";\n      //   alert(\"Please Enter the valid opening and closing time.\");\n      // }\n      // else if (this.isbreak == true && this.breakS == \"\") {\n      //   alert(\"Please Enter the shop's break Start time.\");\n      // }\n      // else if (this.isbreak == true && this.breakE == \"\") {\n      //   alert(\"Please Enter the shop's break End time.\");\n      // }\n      // else if (this.isbreak == true && this.breakE < this.breakS) {\n      //   this.breakE = \"\";\n      //   this.breakS = \"\";\n      //   alert(\"Please Enter the valid break start and end time.\");\n      // }\n      // else if ((this.ShopS > this.breakS || this.ShopE < this.breakE) && this.isbreak == true) {\n      //   alert(\"break time shouold be in between Opening and closing time.\")\n      // }\n      // else {\n      //   if (this.selectedoffDay == \"\") {\n      //     this.weekstartday = \"Sun\";\n      //     this.weekstartday = \"Sat\";\n      //   }\n      //   else {\n      // let index = this.WeekdaysList.findIndex((e: any) => e.values == this.selectedoffDay);\n      // if (index == 0 || index == 6) {\n      //   this.weekstartday = (index == 0 ? this.WeekdaysList[1].values : this.WeekdaysList[0].values);\n      //   this.weekendday = (index == 0 ? this.WeekdaysList[6].values : this.WeekdaysList[5].values);\n      // }\n      // else {\n      //   this.weekstartday = this.WeekdaysList[index + 1].values;\n      //   this.weekendday = this.WeekdaysList[index - 1].values;\n      // }\n      //   this.breakS = (parseFloat(this.breakS.substring(0, 2)) < 12) ? this.breakS + \" AM\" : this.breakS.replace(this.breakS.substring(0, 2), (parseFloat(this.breakS.substring(0, 2)) - 12).toString()) + \" PM\";\n      //   this.breakE = (parseFloat(this.breakE.substring(0, 2)) < 12) ? this.breakE + \" AM\" : this.breakE.replace(this.breakE.substring(0, 2), (parseFloat(this.breakE.substring(0, 2)) - 12).toString()) + \" PM\";\n      //   this.ShopS = (parseFloat(this.ShopS.substring(0, 2)) < 12) ? this.ShopS + \" AM\" : this.ShopS.replace(this.ShopS.substring(0, 2), (parseFloat(this.ShopS.substring(0, 2)) - 12).toString()) + \" PM\";\n      //   this.ShopE = (parseFloat(this.ShopE.substring(0, 2)) < 12) ? this.ShopE + \" AM\" : this.ShopE.replace(this.ShopE.substring(0, 2), (parseFloat(this.ShopE.substring(0, 2)) - 12).toString()) + \" PM\";\n      // }\n      // }\n    }\n\n  }\n\n  TimestampcompareComponent.ɵfac = function TimestampcompareComponent_Factory(t) {\n    return new (t || TimestampcompareComponent)();\n  };\n\n  TimestampcompareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimestampcompareComponent,\n    selectors: [[\"app-timestampcompare\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"A15padding\"]],\n    template: function TimestampcompareComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n        i0.ɵɵtext(2, \" Message Will Be \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".card[_ngcontent-%COMP%]{border:1px solid #80808096;margin:5%;border-radius:10px;padding:5%}.breaktimetable[_ngcontent-%COMP%]{width:100%}.mat-select[_ngcontent-%COMP%]{border:1px solid;border-radius:5px;padding:10px}.A15padding[_ngcontent-%COMP%]{padding:15px!important}.curvborder[_ngcontent-%COMP%]{border:1px solid #c3bfbf;border-radius:15px;margin-top:10px}.mat-form-field[_ngcontent-%COMP%]{width:150px}input#session-date[_ngcontent-%COMP%]::-webkit-calendar-picker-indicator{display:block;top:0;left:0;background:#0000;position:absolute;transform:scale(12)}.mat-slide-toggle-bar[_ngcontent-%COMP%], .mat-slide-toggle-thumb[_ngcontent-%COMP%]{background:#2267b1}\"]\n  });\n  return TimestampcompareComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}