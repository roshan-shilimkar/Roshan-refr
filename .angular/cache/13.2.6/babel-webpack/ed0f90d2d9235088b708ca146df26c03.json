{"ast":null,"code":"import _asyncToGenerator from \"/Users/justmac/Desktop/Refr Group/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AddnewcontactComponent } from './addnewcontact/addnewcontact.component';\nlet ContactsyncComponent = class ContactsyncComponent {\n  constructor(_bottomSheet) {\n    this._bottomSheet = _bottomSheet;\n    this.displayedColumns = ['check', 'name', \"action1\", \"action2\"];\n    this.activated = 1;\n    this.viewTyp = '';\n    this.storeTyp = '';\n    this.Eusercontactlist = [];\n    this.newusercontactlist = [];\n  }\n\n  changeViewTyp(segmentValue) {\n    this.viewTyp = segmentValue;\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.syncContact();\n    }, 1000);\n    this.storeTyp = 'Refrcust';\n\n    if (this.storeTyp == 'Allcust') {\n      this.viewTyp = 'Allcustomer';\n    }\n\n    if (this.storeTyp == 'Refrcust') {\n      this.viewTyp = 'Refrcustomer';\n    }\n\n    if (this.storeTyp == 'Both') {\n      this.viewTyp = 'Refrcustomer';\n    }\n  }\n\n  applyFilter(event, i) {\n    const filterValue = event.target.value;\n    var datatype;\n\n    if (i == 0) {\n      datatype = this.Eusercontacts;\n    } else {\n      datatype = this.newusercontacts;\n    }\n\n    datatype.filter = filterValue.trim().toLowerCase();\n\n    if (datatype.paginator) {\n      datatype.paginator.firstPage();\n    }\n  }\n\n  syncContact() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // await Contacts.getContacts().then(result => {\n      let result;\n\n      if (result != undefined) {\n        for (let i = 0; i < result.contacts.length; i++) {\n          const element = result.contacts[i];\n\n          if (element.displayName && element.contactId && element.phoneNumbers.length) {\n            const newCon = [{\n              displayName: element.displayName,\n              contactId: element.contactId,\n              phoneNumber: element.phoneNumbers[0].number\n            }]; // contacts.push(element)\n\n            _this.Eusercontacts = new MatTableDataSource(newCon);\n          }\n        }\n      } else {\n        _this.Eusercontactlist = [{\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"9167452128\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567801\",\n          Fletter: \"N\"\n        }];\n        _this.newusercontactlist = [{\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"9167452128\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567801\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567802\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567803\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567804\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567805\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567806\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567807\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567808\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567809\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567810\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567811\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567812\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567813\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567814\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567815\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567816\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567817\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567819\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567820\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"1234567821\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"9167452128\",\n          Fletter: \"N\"\n        }];\n        _this.Eusercontacts = new MatTableDataSource(_this.Eusercontactlist);\n        _this.newusercontacts = new MatTableDataSource(_this.newusercontactlist);\n      }\n    })();\n  }\n\n  whatappshare(row) {\n    // if (!this.auth.resource.appMode) {\n    // const X = window.encodeURIComponent(textBODY)\n    const x = \"this is message from \";\n    const wa = `https://wa.me/?${'phone=' + row.phone + '&text=' + x}`;\n    window.open(wa, \"_blank\"); // } \n    // else {\n    // this.socialSharing.canShareVia(\"whatsapp\").then((res) => {\n    // this.socialSharing.shareViaWhatsApp(dataX.message, dataX.image).then(res => {\n    //       console.log(\"Success\");\n    //       this.erz.push(\"res: \" + res)\n    //     }).catch(err => {\n    //       console.log(err)\n    //     })\n    //   }).catch(e => {\n    // this.auth.resource.startSnackBar(\"Error: \" + e)\n    //   })\n    // }\n  }\n\n  invitesmsuser(row) {\n    var userAgent = window.navigator.userAgent;\n    let message = \"hi i rec https://refr.club/ to visit \"; // if (!this.auth.resource.appMode) {\n\n    let comma = \"\";\n\n    if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {\n      comma = \"\";\n    } else {\n      comma = \";\";\n    }\n\n    const url = \"sms:\" + comma + row.phone + \"?\" + \"body=\" + message; // alert(url);\n\n    window.open(url, \"_blank\"); // }\n    // else{\n    // this.socialSharing.shareViaSMS(message, \"\")\n    // }\n  }\n\n  addcontact() {\n    this._bottomSheet.open(AddnewcontactComponent, {\n      panelClass: 'newcontact'\n    });\n  }\n\n};\nContactsyncComponent = __decorate([Component({\n  selector: 'app-contactsync',\n  templateUrl: './contactsync.component.html',\n  styleUrls: ['./contactsync.component.scss']\n})], ContactsyncComponent);\nexport { ContactsyncComponent };","map":{"version":3,"sources":["/Users/justmac/Desktop/Refr Group/client/src/app/components/contactsync/contactsync.component.ts"],"names":["__decorate","Component","MatTableDataSource","AddnewcontactComponent","ContactsyncComponent","constructor","_bottomSheet","displayedColumns","activated","viewTyp","storeTyp","Eusercontactlist","newusercontactlist","changeViewTyp","segmentValue","ngOnInit","setTimeout","syncContact","applyFilter","event","i","filterValue","target","value","datatype","Eusercontacts","newusercontacts","filter","trim","toLowerCase","paginator","firstPage","result","undefined","contacts","length","element","displayName","contactId","phoneNumbers","newCon","phoneNumber","number","name","email","phone","Fletter","whatappshare","row","x","wa","window","open","invitesmsuser","userAgent","navigator","message","comma","match","url","addcontact","panelClass","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AddnewcontactComponent } from './addnewcontact/addnewcontact.component';\nlet ContactsyncComponent = class ContactsyncComponent {\n    constructor(_bottomSheet) {\n        this._bottomSheet = _bottomSheet;\n        this.displayedColumns = ['check', 'name', \"action1\", \"action2\"];\n        this.activated = 1;\n        this.viewTyp = '';\n        this.storeTyp = '';\n        this.Eusercontactlist = [];\n        this.newusercontactlist = [];\n    }\n    changeViewTyp(segmentValue) {\n        this.viewTyp = segmentValue;\n    }\n    ngOnInit() {\n        setTimeout(() => {\n            this.syncContact();\n        }, 1000);\n        this.storeTyp = 'Refrcust';\n        if (this.storeTyp == 'Allcust') {\n            this.viewTyp = 'Allcustomer';\n        }\n        if (this.storeTyp == 'Refrcust') {\n            this.viewTyp = 'Refrcustomer';\n        }\n        if (this.storeTyp == 'Both') {\n            this.viewTyp = 'Refrcustomer';\n        }\n    }\n    applyFilter(event, i) {\n        const filterValue = event.target.value;\n        var datatype;\n        if (i == 0) {\n            datatype = this.Eusercontacts;\n        }\n        else {\n            datatype = this.newusercontacts;\n        }\n        datatype.filter = filterValue.trim().toLowerCase();\n        if (datatype.paginator) {\n            datatype.paginator.firstPage();\n        }\n    }\n    async syncContact() {\n        // await Contacts.getContacts().then(result => {\n        let result;\n        if (result != undefined) {\n            for (let i = 0; i < result.contacts.length; i++) {\n                const element = result.contacts[i];\n                if (element.displayName && element.contactId && element.phoneNumbers.length) {\n                    const newCon = [{\n                            displayName: element.displayName,\n                            contactId: element.contactId,\n                            phoneNumber: element.phoneNumbers[0].number,\n                        }];\n                    // contacts.push(element)\n                    this.Eusercontacts = new MatTableDataSource(newCon);\n                }\n            }\n        }\n        else {\n            this.Eusercontactlist = [\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"9167452128\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567801\", Fletter: \"N\" },\n            ];\n            this.newusercontactlist = [\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"9167452128\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567801\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567802\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567803\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567804\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567805\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567806\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567807\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567808\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567809\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567810\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567811\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567812\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567813\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567814\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567815\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567816\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567817\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567819\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567820\", Fletter: \"N\" },\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567821\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"9167452128\", Fletter: \"N\" },\n            ];\n            this.Eusercontacts = new MatTableDataSource(this.Eusercontactlist);\n            this.newusercontacts = new MatTableDataSource(this.newusercontactlist);\n        }\n    }\n    whatappshare(row) {\n        // if (!this.auth.resource.appMode) {\n        // const X = window.encodeURIComponent(textBODY)\n        const x = \"this is message from \";\n        const wa = `https://wa.me/?${'phone=' + row.phone + '&text=' + x}`;\n        window.open(wa, \"_blank\");\n        // } \n        // else {\n        // this.socialSharing.canShareVia(\"whatsapp\").then((res) => {\n        // this.socialSharing.shareViaWhatsApp(dataX.message, dataX.image).then(res => {\n        //       console.log(\"Success\");\n        //       this.erz.push(\"res: \" + res)\n        //     }).catch(err => {\n        //       console.log(err)\n        //     })\n        //   }).catch(e => {\n        // this.auth.resource.startSnackBar(\"Error: \" + e)\n        //   })\n        // }\n    }\n    invitesmsuser(row) {\n        var userAgent = window.navigator.userAgent;\n        let message = \"hi i rec https://refr.club/ to visit \";\n        // if (!this.auth.resource.appMode) {\n        let comma = \"\";\n        if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {\n            comma = \"\";\n        }\n        else {\n            comma = \";\";\n        }\n        const url = \"sms:\" + comma + row.phone + \"?\" + \"body=\" + message;\n        // alert(url);\n        window.open(url, \"_blank\");\n        // }\n        // else{\n        // this.socialSharing.shareViaSMS(message, \"\")\n        // }\n    }\n    addcontact() {\n        this._bottomSheet.open(AddnewcontactComponent, {\n            panelClass: 'newcontact',\n        });\n    }\n};\nContactsyncComponent = __decorate([\n    Component({\n        selector: 'app-contactsync',\n        templateUrl: './contactsync.component.html',\n        styleUrls: ['./contactsync.component.scss']\n    })\n], ContactsyncComponent);\nexport { ContactsyncComponent };\n"]},"metadata":{},"sourceType":"module"}