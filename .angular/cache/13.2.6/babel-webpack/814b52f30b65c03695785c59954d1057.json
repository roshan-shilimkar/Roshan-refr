{"ast":null,"code":"import _asyncToGenerator from \"/Users/justmac/Desktop/Refr Group/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nlet ContactsyncComponent = class ContactsyncComponent {\n  constructor() {\n    this.displayedColumns = ['check', 'name', \"action\"];\n    this.viewTyp = '';\n    this.storeTyp = '';\n    this.Eusercontactlist = [];\n  }\n\n  changeViewTyp(segmentValue) {\n    this.viewTyp = segmentValue;\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.syncContact();\n    }, 1000);\n    this.storeTyp = 'Refrcust';\n\n    if (this.storeTyp == 'Allcust') {\n      this.viewTyp = 'Allcustomer';\n    }\n\n    if (this.storeTyp == 'Refrcust') {\n      this.viewTyp = 'Refrcustomer';\n    }\n\n    if (this.storeTyp == 'Both') {\n      this.viewTyp = 'Refrcustomer';\n    }\n  }\n\n  addcontact() {// this._bottomSheet.open(ContactbottomsheetComponent, {\n    //   panelClass: 'aaaaaaaaaaaaaaaaaaaaaa',\n    // });\n  }\n\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.Eusercontacts.filter = filterValue.trim().toLowerCase();\n\n    if (this.Eusercontacts.paginator) {\n      this.Eusercontacts.paginator.firstPage();\n    }\n  }\n\n  syncContact() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // await Contacts.getContacts().then(result => {\n      let result;\n\n      if (result != undefined) {\n        for (let i = 0; i < result.contacts.length; i++) {\n          const element = result.contacts[i];\n\n          if (element.displayName && element.contactId && element.phoneNumbers.length) {\n            const newCon = [{\n              displayName: element.displayName,\n              contactId: element.contactId,\n              phoneNumber: element.phoneNumbers[0].number\n            }]; // contacts.push(element)\n\n            _this.Eusercontacts = new MatTableDataSource(newCon);\n          }\n        }\n      } else {\n        _this.Eusercontactlist = [{\n          name: \"Name1\",\n          email: \"email1@example.com\",\n          phone: \"9167452128\",\n          Fletter: \"N\"\n        }, {\n          name: \"Name2\",\n          email: \"email2@example.com\",\n          phone: \"1234567801\",\n          Fletter: \"N\"\n        }]; // this.newusercontactlist = [\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"9167452128\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567801\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567802\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567803\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567804\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567805\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567806\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567807\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567808\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567809\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567810\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567811\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567812\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567813\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567814\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567815\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567816\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567817\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567819\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567820\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567821\", userexist: false, selected: false, inviteddate: \"\" },\n        //   { name: \"Name2\", email: \"email2@example.com\", phone: \"9167452128\", userexist: false, selected: false, inviteddate: \"\" },\n        // ];\n\n        _this.Eusercontacts = new MatTableDataSource(_this.Eusercontactlist);\n      }\n    })();\n  }\n\n  whatappshare() {\n    // if (!this.auth.resource.appMode) {\n    // const X = window.encodeURIComponent(textBODY)\n    const x = \"this is message from \";\n    const wa = `https://wa.me/?${'text=' + x}`;\n    window.open(wa, \"_blank\"); // } \n    // else {\n    // this.socialSharing.canShareVia(\"whatsapp\").then((res) => {\n    // this.socialSharing.shareViaWhatsApp(dataX.message, dataX.image).then(res => {\n    //       console.log(\"Success\");\n    //       this.erz.push(\"res: \" + res)\n    //     }).catch(err => {\n    //       console.log(err)\n    //     })\n    //   }).catch(e => {\n    //   })\n    // }\n  }\n\n  invitesmsuser() {\n    var userAgent = window.navigator.userAgent;\n    let message = \"hi i rec https://refr.club/ to visit \"; // if(!this.auth.resource.appMode){\n\n    const url = \"sms:\" + (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) ? \"\" : \";\" + \"body=\" + message;\n    window.open(url, \"_blank\"); // }\n    // else{\n    // this.socialSharing.shareViaSMS(message, \"\")\n    // }\n  }\n\n};\nContactsyncComponent = __decorate([Component({\n  selector: 'app-contactsync',\n  templateUrl: './contactsync.component.html',\n  styleUrls: ['./contactsync.component.scss']\n})], ContactsyncComponent);\nexport { ContactsyncComponent };","map":{"version":3,"sources":["/Users/justmac/Desktop/Refr Group/client/src/app/components/contactsync/contactsync.component.ts"],"names":["__decorate","Component","MatTableDataSource","ContactsyncComponent","constructor","displayedColumns","viewTyp","storeTyp","Eusercontactlist","changeViewTyp","segmentValue","ngOnInit","setTimeout","syncContact","addcontact","applyFilter","event","filterValue","target","value","Eusercontacts","filter","trim","toLowerCase","paginator","firstPage","result","undefined","i","contacts","length","element","displayName","contactId","phoneNumbers","newCon","phoneNumber","number","name","email","phone","Fletter","whatappshare","x","wa","window","open","invitesmsuser","userAgent","navigator","message","url","match","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nlet ContactsyncComponent = class ContactsyncComponent {\n    constructor() {\n        this.displayedColumns = ['check', 'name', \"action\"];\n        this.viewTyp = '';\n        this.storeTyp = '';\n        this.Eusercontactlist = [];\n    }\n    changeViewTyp(segmentValue) {\n        this.viewTyp = segmentValue;\n    }\n    ngOnInit() {\n        setTimeout(() => {\n            this.syncContact();\n        }, 1000);\n        this.storeTyp = 'Refrcust';\n        if (this.storeTyp == 'Allcust') {\n            this.viewTyp = 'Allcustomer';\n        }\n        if (this.storeTyp == 'Refrcust') {\n            this.viewTyp = 'Refrcustomer';\n        }\n        if (this.storeTyp == 'Both') {\n            this.viewTyp = 'Refrcustomer';\n        }\n    }\n    addcontact() {\n        // this._bottomSheet.open(ContactbottomsheetComponent, {\n        //   panelClass: 'aaaaaaaaaaaaaaaaaaaaaa',\n        // });\n    }\n    applyFilter(event) {\n        const filterValue = event.target.value;\n        this.Eusercontacts.filter = filterValue.trim().toLowerCase();\n        if (this.Eusercontacts.paginator) {\n            this.Eusercontacts.paginator.firstPage();\n        }\n    }\n    async syncContact() {\n        // await Contacts.getContacts().then(result => {\n        let result;\n        if (result != undefined) {\n            for (let i = 0; i < result.contacts.length; i++) {\n                const element = result.contacts[i];\n                if (element.displayName && element.contactId && element.phoneNumbers.length) {\n                    const newCon = [{\n                            displayName: element.displayName,\n                            contactId: element.contactId,\n                            phoneNumber: element.phoneNumbers[0].number,\n                        }];\n                    // contacts.push(element)\n                    this.Eusercontacts = new MatTableDataSource(newCon);\n                }\n            }\n        }\n        else {\n            this.Eusercontactlist = [\n                { name: \"Name1\", email: \"email1@example.com\", phone: \"9167452128\", Fletter: \"N\" },\n                { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567801\", Fletter: \"N\" },\n            ];\n            // this.newusercontactlist = [\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"9167452128\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567801\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567802\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567803\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567804\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567805\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567806\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567807\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567808\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567809\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567810\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567811\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567812\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567813\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567814\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567815\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567816\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567817\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567819\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"1234567820\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name1\", email: \"email1@example.com\", phone: \"1234567821\", userexist: false, selected: false, inviteddate: \"\" },\n            //   { name: \"Name2\", email: \"email2@example.com\", phone: \"9167452128\", userexist: false, selected: false, inviteddate: \"\" },\n            // ];\n            this.Eusercontacts = new MatTableDataSource(this.Eusercontactlist);\n        }\n    }\n    whatappshare() {\n        // if (!this.auth.resource.appMode) {\n        // const X = window.encodeURIComponent(textBODY)\n        const x = \"this is message from \";\n        const wa = `https://wa.me/?${'text=' + x}`;\n        window.open(wa, \"_blank\");\n        // } \n        // else {\n        // this.socialSharing.canShareVia(\"whatsapp\").then((res) => {\n        // this.socialSharing.shareViaWhatsApp(dataX.message, dataX.image).then(res => {\n        //       console.log(\"Success\");\n        //       this.erz.push(\"res: \" + res)\n        //     }).catch(err => {\n        //       console.log(err)\n        //     })\n        //   }).catch(e => {\n        //   })\n        // }\n    }\n    invitesmsuser() {\n        var userAgent = window.navigator.userAgent;\n        let message = \"hi i rec https://refr.club/ to visit \";\n        // if(!this.auth.resource.appMode){\n        const url = \"sms:\" + (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) ? \"\" : \";\" + \"body=\" + message;\n        window.open(url, \"_blank\");\n        // }\n        // else{\n        // this.socialSharing.shareViaSMS(message, \"\")\n        // }\n    }\n};\nContactsyncComponent = __decorate([\n    Component({\n        selector: 'app-contactsync',\n        templateUrl: './contactsync.component.html',\n        styleUrls: ['./contactsync.component.scss']\n    })\n], ContactsyncComponent);\nexport { ContactsyncComponent };\n"]},"metadata":{},"sourceType":"module"}